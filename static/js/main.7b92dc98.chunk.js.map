{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colors","random","arr","Math","floor","length","App","props","state","quotes","text","author","color","handleClick","bind","$","ajax","method","url","dataType","done","data","randomQuote","document","body","style","backgroundColor","setState","quote","e","preventDefault","this","href","encodeURIComponent","buttonColor","borderCorlor","className","id","target","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kRAKMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAKIC,EAAS,SAACC,GACd,OAAOA,EAAIC,KAAKC,MAAMD,KAAKF,SAAWC,EAAIG,UAuF7BC,E,kDAnFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,MAAO,IAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBARF,E,qDAWnB,WAAqB,IAAD,OAClBC,IAAEC,KAAK,CACLC,OAAQ,MACRC,IArBU,2IAsBVC,SAAU,SAEXC,MAAK,SAAAC,GACJ,IAAMC,EAAcrB,EAAOoB,EAAKZ,QAC1BG,EAAQX,EAAOD,GACrBuB,SAASC,KAAKC,MAAMC,gBAAkBd,EACtC,EAAKe,SAAS,CACZlB,OAAQY,EAAKZ,OACbC,KAAMY,EAAYM,MAClBjB,OAAQW,EAAYX,OACpBC,e,yBAKN,SAAYiB,GACVA,EAAEC,iBACF,IAAMR,EAAcrB,EAAO8B,KAAKvB,MAAMC,QAChCG,EAAQX,EAAOD,GACrBuB,SAASC,KAAKC,MAAMC,gBAAkBd,EACtCmB,KAAKJ,SAAS,CACZjB,KAAMY,EAAYM,MAClBjB,OAAQW,EAAYX,OACpBC,Y,oBAIJ,WAEE,IAAMoB,EAAO,yDAA2DC,mBAAmB,IAAD,OAAKF,KAAKvB,MAAME,KAAhB,aAAyBqB,KAAKvB,MAAMG,SAE9H,EAAgCoB,KAAKvB,MAA7BI,EAAR,EAAQA,MAAOF,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,OAGfuB,EAAc,CAClBR,gBAAiBd,EACjBuB,aAAcvB,GAGhB,OACE,qBAAKwB,UAAU,MAAf,SACE,sBAAKC,GAAG,YAAYD,UAAU,OAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,oBAAGX,MAAO,CAACb,SAAQyB,GAAG,OAAOD,UAAU,4BAAvC,UACE,mBAAGA,UAAU,gCADf,IACmD1B,OAGrD,4BAAYe,MAAO,CAACb,SAAQwB,UAAU,6BAA6BC,GAAG,SAAtE,SACG1B,IAEH,sBAAKyB,UAAU,iCAAf,UACE,mBAAGJ,KAAMA,EAAMM,OAAO,OAAOF,UAAU,MAAMX,MAAOS,EAApD,SAAiE,mBAAGE,UAAU,qBAC9E,wBACEX,MAAOS,EACPE,UAAU,MACVG,QAASR,KAAKlB,YACdyB,OAAO,SACPD,GAAG,YALL,mC,GApEMG,aCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.7b92dc98.chunk.js","sourcesContent":["import './App.sass';\nimport React, { Component } from 'react';\nimport $ from \"jquery\"\n\n//Variables\nconst colors = [\n  \"#006d77\",\n  \"#8d99ae\",\n  \"#f6bd60\",\n  \"#f28482\",\n  \"#b08968\",\n  \"#8a817c\",\n  \"#d4e09b\",\n  \"#f28f3b\",\n  \"#723d46\",\n  \"#50514f\",\n  \"#e63946\",\n  \"#f77f00\",\n];\n\nconst baseURL = \"https://gist.githubusercontent.com/nasrulhazim/54b659e43b1035215cd0ba1d4577ee80/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nconst random = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      text: \"\",\n      author: \"\",\n      color: \"\"\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    $.ajax({\n      method: \"GET\",\n      url: baseURL,\n      dataType: \"json\"\n    })\n    .done(data => {\n      const randomQuote = random(data.quotes);\n      const color = random(colors);\n      document.body.style.backgroundColor = color;\n      this.setState({\n        quotes: data.quotes,\n        text: randomQuote.quote,\n        author: randomQuote.author,\n        color\n      });\n    });\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    const randomQuote = random(this.state.quotes);\n    const color = random(colors);\n    document.body.style.backgroundColor = color;\n    this.setState({\n      text: randomQuote.quote,\n      author: randomQuote.author,\n      color\n    });\n  }\n\n  render() {\n    //Href for Twitter share button\n    const href = \"https://twitter.com/intent/tweet?hashtags=quotes&text=\" + encodeURIComponent(`\"${this.state.text}\" ${this.state.author}`);\n\n    const { color, text, author } = this.state;\n\n    //Style for buttons background\n    const buttonColor = {\n      backgroundColor: color,\n      borderCorlor: color\n    }\n\n    return (\n      <div className=\"row\">\n        <div id=\"quote-box\" className=\"card\">\n          <div className=\"blackquote\">\n            <p style={{color}} id=\"text\" className=\"text-center fs-2 fw-light\">\n              <i className=\"fas fa-quote-left fs-3 me-3\"></i> {text}\n            </p>\n          </div>\n          <figcaption style={{color}} className=\"blackquote-footer text-end\" id=\"author\">\n            {author}\n          </figcaption>\n          <div className=\"d-flex justify-content-between\">\n            <a href={href} target=\"_top\" className=\"btn\" style={buttonColor}><i className=\"fab fa-twitter\"></i></a>\n            <button\n              style={buttonColor}\n              className=\"btn\"\n              onClick={this.handleClick}\n              target=\"_blank\"\n              id=\"new-quote\"\n              >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}